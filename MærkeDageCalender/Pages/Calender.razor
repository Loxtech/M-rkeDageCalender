@page "/Calender"
@using System.Globalization

<h3>Calender</h3>
<h1>@monthName, @year</h1>
<button @onclick="() => {monthsAway--; CreateMonth();}" type="button" class="btn btn-primary" style="margin-bottom: 5px;">Previous Month</button>
<button @onclick="() => {monthsAway++; CreateMonth();}" type="button" class="btn btn-danger" style="margin-left: 10px; margin-bottom: 5px">Next Month</button>

@code {
    string getMonthName = "";
    string monthName = "";
    DateTime monthEnd;
    int monthsAway = 0;
    int numDummyColumn = 0;
    int year = 2023;
    int month = 0;
    List<PublicHoliday> publicHolidays = new List<PublicHoliday>();

    void CreateMonth()
    {
        var tempDate = DateTime.Now.AddMonths(monthsAway);
        month = tempDate.Month;
        year = tempDate.Year;

        DateTime monthStart = new DateTime(year, month, 1);
        monthEnd = monthStart.AddMonths(1).AddDays(-1);
        getMonthName = DateTimeFormatInfo.CurrentInfo.GetMonthName(month);
        monthName = $"{getMonthName[0].ToString().ToUpper()}{getMonthName.Substring(1)}";

        numDummyColumn = (int)monthStart.DayOfWeek;
    }

    protected override async Task OnInitializedAsync()
    {
        CreateMonth();
        await GetPublicHolidays();
    }

    public async Task GetPublicHolidays()
    {
        var httpClient = new HttpClient();
        var response = await httpClient.GetFromJsonAsync<List<PublicHoliday>>($"https://date.nager.at/api/v3/publicholidays/2023/DK");
        //var response = await httpClient.GetFromJsonAsync<List<PublicHoliday>>($"https://api.sallinggroup.com/v1/holidays -H 'Authorization: Bearer <706fa95d-511a-4ce7-bca6-c58f2bd5bf0a>");
        if (response != null)
        {
            publicHolidays = response;
        }
        else
        {
            throw new Exception();
        }
    }
}

<section>
    @for (int i = 0; i < numDummyColumn; i++)
            {
                <div></div>
            }
            @for (int i = 1; i <= monthEnd.Day; i++)
            {
                var calenderItem = publicHolidays.FirstOrDefault(n => n.Date == new DateTime(year, month, i));

                <div>
                    <h2>@i</h2>
                    @if (calenderItem != null)
                    {
                        <p style="color: darkblue">@calenderItem.Name</p>
                        <p style="color: blue">National Holiday?: @calenderItem.LocalName</p>
                    }
                </div>
            }
        </section>
